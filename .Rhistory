color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
mat <- as.data.frame(mat)
}
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE", colorBy)
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = c("samples", colorBy))
plot <- ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(value))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
}
col <- length(unique(melt[,colorBy]))
plot <- plot +
ylab("Index Score") +
scale_fill_manual(name = colorBy, values = colorblind_vector(col)) +
facet_wrap(~variable, scales = "free", ncol = 4) +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
return(plot)
}
clonalDiversity(df, call = "gene", colorBy = "samples")
clonalDiversity(df, call = "gene", colorBy = "ID")
View(melt)
melt[,colorBy]
ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(value))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
clonalDiversity <- function(df,
call = c("gene", "nt", "aa"),
colorBy = "samples") {
if (call == "gene") {
call <- "CTgene"
} else if(call == "nt") {
call <- "CTnt"
} else {
call <- "CTaa"
}
mat <- NULL
if (colorBy == "samples") {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z)
mat <- rbind.data.frame(mat, out)
}
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE")
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = "samples")
plot <- ggplot(melt, aes(x, y=value)) +
geom_jitter(shape=21, size=3, width=0.2, aes(fill=melt[,colorBy]))
} else {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
mat <- as.data.frame(mat)
}
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE", colorBy)
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = c("samples", colorBy))
plot <- ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(melt[,value]))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
}
col <- length(unique(melt[,colorBy]))
plot <- plot +
ylab("Index Score") +
scale_fill_manual(name = colorBy, values = colorblind_vector(col)) +
facet_wrap(~variable, scales = "free", ncol = 4) +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
return(plot)
}
clonalDiversity(df, call = "gene", colorBy = "samples")
clonalDiversity(df, call = "gene", colorBy = "ID")
mat <- NULL
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
mat <- as.data.frame(mat)
}
View(mat)
mat <- NULL
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
mat <- as.data.frame(mat)
}
mat <- NULL
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
}
clonalDiversity <- function(df,
call = c("gene", "nt", "aa"),
colorBy = "samples") {
if (call == "gene") {
call <- "CTgene"
} else if(call == "nt") {
call <- "CTnt"
} else {
call <- "CTaa"
}
mat <- NULL
if (colorBy == "samples") {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z)
mat <- rbind.data.frame(mat, out)
}
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE")
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = "samples")
plot <- ggplot(melt, aes(x, y=value)) +
geom_jitter(shape=21, size=3, width=0.2, aes(fill=melt[,colorBy]))
} else {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
}
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE", colorBy)
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = c("samples", colorBy))
plot <- ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(melt[,value]))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
}
col <- length(unique(melt[,colorBy]))
plot <- plot +
ylab("Index Score") +
scale_fill_manual(name = colorBy, values = colorblind_vector(col)) +
facet_wrap(~variable, scales = "free", ncol = 4) +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
return(plot)
}
clonalDiversity(df, call = "gene", colorBy = "samples")
clonalDiversity(df, call = "gene", colorBy = "ID")
clonalDiversity <- function(df,
call = c("gene", "nt", "aa"),
colorBy = "samples") {
if (call == "gene") {
call <- "CTgene"
} else if(call == "nt") {
call <- "CTnt"
} else {
call <- "CTaa"
}
mat <- NULL
if (colorBy == "samples") {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z)
mat <- rbind.data.frame(mat, out)
}
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE")
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = "samples")
plot <- ggplot(melt, aes(x, y=value)) +
geom_jitter(shape=21, size=3, width=0.2, aes(fill=melt[,colorBy]))
} else {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
}
mat <- as.data.frame(mat)
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE", colorBy)
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = c("samples", colorBy))
plot <- ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(melt[,value]))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
}
col <- length(unique(melt[,colorBy]))
plot <- plot +
ylab("Index Score") +
scale_fill_manual(name = colorBy, values = colorblind_vector(col)) +
facet_wrap(~variable, scales = "free", ncol = 4) +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
return(plot)
}
clonalDiversity(df, call = "gene", colorBy = "samples")
clonalDiversity(df, call = "gene", colorBy = "ID")
mat <- NULL
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
}
View(mat)
mat <- as.data.frame(mat)
View(mat)
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE", colorBy)
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = c("samples", colorBy))
ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(melt[,value]))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(value))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
clonalDiversity <- function(df,
call = c("gene", "nt", "aa"),
colorBy = "samples") {
if (call == "gene") {
call <- "CTgene"
} else if(call == "nt") {
call <- "CTnt"
} else {
call <- "CTaa"
}
mat <- NULL
if (colorBy == "samples") {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z)
mat <- rbind.data.frame(mat, out)
}
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE")
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = "samples")
plot <- ggplot(melt, aes(x, y=value)) +
geom_jitter(shape=21, size=3, width=0.2, aes(fill=melt[,colorBy]))
} else {
for (i in seq_along(df)) {
data <- as.data.frame(table(df[[i]][,call]))
color <- df[[i]][1,colorBy]
w <- vegan::diversity(data[,"Freq"], index = "shannon")
x <- vegan::diversity(data[,"Freq"], index = "invsimpson")
y <- vegan::estimateR(data[,"Freq"])[2] #Chao
z <- vegan::estimateR(data[,"Freq"])[4] #ACE
out <- c(w,x,y,z,color)
mat <- rbind(mat, out)
}
mat <- as.data.frame(mat)
colnames(mat) <- c("Shannon", "Inv.Simpson", "Chao", "ACE", colorBy)
rownames(mat) <- names(df)
mat$samples <- rownames(mat)
melt <- reshape2::melt(mat, id.vars = c("samples", colorBy))
plot <- ggplot(melt, aes(x=melt[,colorBy], y=as.numeric(value))) +
geom_boxplot(aes(fill=melt[,colorBy]), outlier.alpha = 0) +
geom_jitter()
}
col <- length(unique(melt[,colorBy]))
plot <- plot +
ylab("Index Score") +
scale_fill_manual(name = colorBy, values = colorblind_vector(col)) +
facet_wrap(~variable, scales = "free", ncol = 4) +
theme_classic() +
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
return(plot)
}
clonalDiversity(df, call = "gene", colorBy = "samples")
clonalDiversity(df, call = "gene", colorBy = "ID")
ggsave("Figure3D.eps", height=1.5, width=3)
ggsave("Figure3D.eps", height=2, width=5)
data("contig_list")
devtools::document()
data("contig_list")
head(contig_list[[1]])
data("contig_list")
contig_list <- load("data/contig_list.rda")
contig_list <- load("/data/contig_list.rda")
contig_list <- load("data/contig_list.rda")
contig_list <- load("/data/contig_list.rda")
contig_list <- load("data/contig_list.rda")
contig_list <- data("contig_list")
head(contig_list[[1]])
data("contig_list")
data("contig_list.rda")
data("contig_list")
load("contig_list.rda")
contig_list <- load("contig_list.rda")
contig_list <- load("data/contig_list.rda")
contig_list <- load("/data/contig_list.rda")
data("contig_list")
contig_list <- load(file = "data/contig_list.rda")
contig_list <- load(file = "/data/contig_list.rda")
contig_list <- load(file = "./data/contig_list.rda")
data("contig_list")
contig_list <- data("contig_list")
contig_list <- load(file = "~/data/contig_list.rda")
contig_list <- get(load(file = "/data/contig_list.rda"))
contig_list <- get(load(file = "data/contig_list.rda"))
getwd()
dir <- getwd()
contig_list <- get(load(file = paste(dir, "/data/contig_list.rda", sep="")))
contig_list <- load(file = paste(dir, "/data/contig_list.rda", sep="")))
contig_list <- load(file = paste(dir, "/data/contig_list.rda", sep=""))
dir <- "/Users/nick/Documents/GitHub/scRepertoire"
contig_list <- load(file = paste(dir, "/data/contig_list.rda", sep=""))
contig_list <- get(load(file = paste(dir, "/data/contig_list.rda", sep="")))
devtools::document()
devtools::use_vignette("introduction")
devtools::build_vignettes("introduction")
getwd
getwd()
document()
library("devtools", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
document()
setwd("..")
install("scRepertoire")
for (i in seq_along(contig_list)) {
contig_list[[i]] <- stripBarcode(contig_list[[i]], column = 1, connector = "_", num_connects = 3)
}
detach("package:scRepertoire", unload=TRUE)
library("scRepertoire", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
devtools::document()
getwd()
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
install("scRepertoire")
setwd("..")
install("scRepertoire")
load("contig_list")
devtools::create("mypackage")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
traceback(devtools::document())
traceback()
packageDescription("scRepetoire")
packageDescription("scRepertoire")
packageDescription()
packageDescription("scRepetoire")
packageDescription("scRepertoire")
devtools::document()
setwd("..")
install("scRepertoire")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
setwd("..")
install("scRepertoire")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
devtools::document()
setwd("..")
install("scRepertoire")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
setwd("..")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
setwd("..")
install("scRepertoire")
setwd("..")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
setwd("..")
install("scRepertoire")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
setwd("..")
install("scRepertoire")
data <- df[[i]]
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
setwd("..")
install("scRepertoire")
build_vignettes()
getwd()
clean_vignettes()
setwd("/Users/nick/Documents/GitHub/scRepertoire")
build_vignettes()
build_vignettes()
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::use_vignette()
build_vignettes()
getwd()
build_vignettes("vignette.Rmd")
build_vignettes()
devtools::document()
build_vignettes()
setwd("..")
install("scRepertoire")
build_vignettes()
setwd("/Users/nick/Documents/GitHub/scRepertoire")
build_vignettes()
devtools::document()
devtools::document()
setwd("..")
install("scRepertoire")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
build_vignettes()
build_vignettes()
setwd("/Users/nick/Documents/GitHub/scRepertoire/vignette")
setwd("/Users/nick/Documents/GitHub/scRepertoire/vignettes")
build_vignettes()
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
data("seurat")
seurat2 <- seurat
seurat2@assays$RNA <- NULL
DimPlot(seurat2)
View(seurat2)
seurat2@assays$integrated <- NULL
DimPlot(seurat2)
seurat2 <- seurat
seurat2@assays$RNA <- NULL
seurat2@assays$integrated@counts <- NULL
seurat2@assays$integrated@data <- NULL
View(seurat2)
seurat2@assays$integrated@scale.data <- NULL
View(seurat2)
seurat2@commands <- NULL
seurat2[1]
seurat[[1]]
save(seurat, seurat.rda)
save(seurat, "seurat.rda")
(seurat2, file="seurat.rda")
save(seurat2, file="seurat.rda")
setwd("/Users/nick/Documents/GitHub/scRepertoire")
devtools::document()
setwd("..")
install("scRepertoire")
seurat <- load("~/seurat.rda")
library(Seurat)
seurat <- load("~/seurat.rda")
DimPlot(seurat, label = T) + NoLegend()
seurat <- seurat2
save(seurat, file = "seurat.rda")
seurat <- load("~/seurat.rda")
seurat <- load("~/seurat.rda")
seurat <- load("/Users/nick/seurat.rda")
seurat <- load("/Users/nick/seurat.rda")
seurat <- get(load("/Users/nick/seurat.rda"))
devtools::install_github("ncborcherding/scRepertoire")
