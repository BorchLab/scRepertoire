plotGene <- function(dat,
gene) {
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_compare_means(label.x.npc = "center") +
theme(axis.title.x = element_blank())
return(plot)
}
plotGene(dat = pancreatic.data,
gene = "ROR1")
gene = "ROR1"
dat <- pancreatic.data
y.max <- max(dat[,gene])
y.max <- round(max(dat[,gene]))+ 1
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_compare_means(label.x.npc = "center") +
geom_bracket(y.position = y.max) +
theme(axis.title.x = element_blank())
View(dat)
dat[1:10,1:10]
stat.test <- dat %>%
t_test(dat[,gene] ~ dat[,"subtype"])
stat.test <- dat %>%
wilcox.test(dat[,gene] ~ dat[,"subtype"])
stat.test <- dat %>%
wilcox.test(dat[,"subtype"] ~ dat[,gene])
class(dat[,gene])
dat[,"subtype"]
cc.genes.updated.2019$g2m.genes
sort(dat[,"subtype"])
order(dat[,"subtype"])
stat.test <- dat %>%
wilcox.test(dat[,gene] ~ as.integer(as.logical(dat[,"subtype"])))
wilcox.test(dat[,gene] ~ as.integer(as.logical(dat[,"subtype"])))
as.integer(as.logical(dat[,"subtype"]))
as.logical(dat[,"subtype"]
)
stat.test <- dat %>%
wilcox.test(dat[,gene] ~ as.integer((dat[,"subtype"]))
y.max <- round(max(dat[,gene]))+
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_compare_means(label.x.npc = "center") +
theme(axis.title.x = element_blank())
return(plot)
}
wilcox.test(dat[,gene] ~ as.integer((dat[,"subtype"]))
wilcox.test(dat[,gene] ~ as.integer(dat[,"subtype"]))
as.integer(dat[,"subtype"])
stat.test <- dat %>%
wilcox.test(dat[,gene] ~ factor(as.integer(dat[,"subtype"]), labels = c(0,1)))
wilcox.test(dat[,gene] ~ factor(as.integer(dat[,"subtype"]), labels = c(0,1)))
factor(as.integer(dat[,"subtype"]), labels = c(0,1))
factor(as.integer(dat[,"subtype"]), labels = c(0,1))
as.integer(dat[,"subtype"])\
as.integer(dat[,"subtype"])
View(dat)
dat$subtype
stat.test <- dat %>%
wilcox.test(dat[,gene] ~ factor(dat[,"subtype"]), labels = c(0,1))
factor(dat[,"subtype"]), labels = c(0,1)
factor(dat[,"subtype"]), labels = c(0,1)
wilcox.test(dat[,gene] ~ factor(dat[,"subtype"], labels = c(0,1)))
stat.summary <- wilcox.test(dat[,gene] ~ factor(dat[,"subtype"], labels = c(0,1)))
View(stat.summary)
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.summary$p.value, label = "p = {p.adj}")
theme(axis.title.x = element_blank())
y.max <- round(max(dat[,gene]))+
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.summary$p.value, label = "p = {p.adj}") +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.summary$p.value, label = "p = {p.adj}") +
theme(axis.title.x = element_blank())
stat.test <- compare_means(
ROR1 ~ subtype, data = dat,
method = "t.test"
)
View(stat.test)
stat.test <- compare_means(
dat[,gene] ~ dat[,"subtype"], data = dat)
dat[,"subtype"]
stat.test <- compare_means(
dat[,gene] ~ factor(dat[,"subtype"], labels = c(0,1)), data = dat)
factor(dat[,"subtype"], labels = c(0,1))
ompare_means(
dat[,gene] ~ factor(dat[,"subtype"], labels = c(0,1)), data = dat)
compare_means(
dat[,gene] ~ factor(dat[,"subtype"], labels = c(0,1)), data = dat)
stat.test <- compare_means(
dat[,gene] ~ subtype, labels = c(0,1)), data = dat)
stat.test <- compare_means(
dat[,gene] ~ subtype, data = dat)
stat.test <- compare_means(dat[,gene] ~ subtype, data = dat)
dat[,gene]
stat.test <- compare_means(gene ~ subtype, data = dat)
stat.test <- compare_means(noquote(gene) ~ subtype, data = dat)
stat.test <- compare_means(dat[,gene] ~ subtype, data = dat)
plotGene <- function(dat,
gene) {
stat.summary <- wilcox.test(dat[,gene] ~ factor(dat[,"subtype"], labels = c(0,1)))
y.max <- round(max(dat[,gene]))
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
geom_text(aes(y = y.max, label = stat.summary$p.value)) +
theme(axis.title.x = element_blank())
return(plot)
}
plotGene <- function(dat,
gene) {
stat.summary <- wilcox.test(dat[,gene] ~ factor(dat[,"subtype"], labels = c(0,1)))
y.max <- round(max(dat[,gene]))
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
geom_text(aes(y = y.max, label = stat.summary$p.value)) +
theme(axis.title.x = element_blank())
return(plot)
}
plotGene(dat = pancreatic.data,
gene = "ROR1")
stat.test <- dat %>%
t_test(gene ~ subtype)
library(rstatix)
stat.test <- dat %>%
t_test(gene ~ subtype)
stat.test <- dat %>%
t_test(dat[,gene] ~ subtype)
stat.test <- dat %>%
t_test(dat[,gene] ~ subtype) %>%
add_significance()
stat.test <- dat %>%
wilcox_test(dat[,gene] ~ subtype) %>%
add_significance()
stat.test <- dat %>%
wilcox_test(dat[,gene] ~ subtype) %>%
add_significance()
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance()
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_xy_position(x = "group")
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_xy_position(x = "group")
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance()
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_xy_position(x = "subtype")
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance()
stat.test %>%
add_xy_position(x = "subtype")
stat.test %>%
add_y_position(x = "subtype")
stat.test %>%
add_x_position(x = "subtype")
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype", y = gene)
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_xy_position(x = "subtype", y = gene)
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
View(stat.test)
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
stat.test <- stat.test %>%
mutate(ymin = min(dat[,gene]),
ymax = max(dat[,gene]))
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
stat.test <- stat.test %>%
mutate(y.position = max(dat[,gene]))
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic()
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0)
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
stat.test <- stat.test %>%
mutate(y.position = max(dat[,gene]))
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0)
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_xy_position(x = "subtype", fun = "max")
View(stat.test)
stat.test1 <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
View(stat.test1)
stat.test$groups
class(stat.test$groups)
stat.test <- stat.test %>%
mutate(y.position = max(dat[,gene]),
groups = list(unique(dat$subtype)))
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
stat.test <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_xy_position(x = "subtype", fun = "max")
stat.test1 <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
stat.test1 <- stat.test1 %>%
mutate(y.position = max(dat[,gene]),
groups = list(unique(dat$subtype)))
stat.test1 <- stat.test1[,c(1:8,11:12,9:10)]
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene], fill = subtype)) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin() +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, tip.length = 0) +
theme(axis.title.x = element_blank())
stat.test1 <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
stat.test1 <- stat.test1 %>%
mutate(y.position = max(dat[,gene]),
groups = list(unique(dat$subtype)))
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, tip.length = 0) +
theme(axis.title.x = element_blank())
stat.test1 <- stat.test1 %>%
mutate(y.position = round(max(dat[,gene]+1)),
groups = list(unique(dat$subtype)))
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, tip.length = 0) +
theme(axis.title.x = element_blank())
stat.test1 <- stat.test1 %>%
mutate(y.position = round(max(dat[,gene] + 0.5)),
groups = list(unique(dat$subtype)))
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, tip.length = 0) +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, tip.length = 0.25, label = "p") +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
return(plot)
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
stat_summary(fun.data = mean, geom = "text") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
n_fun <- function(x){
return(data.frame(y = median(x), label = median(x))))
}
n_fun <- function(x){
return(data.frame(y = median(x), label = median(x)))
}
gplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
stat_summary(fun.data = mean, geom = "text") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
stat_summary(fun.data = mean, geom = "text") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
stat_summary(fun.data = n_fun, geom = "text") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
n_fun <- function(x){
return(data.frame(y = 0, label = round(median(x),2)))
}
ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
stat_summary(fun.data = n_fun, geom = "text") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
plotGene <- function(dat,
gene) {
stat.test1 <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
stat.test1 <- stat.test1 %>%
mutate(y.position = round(max(dat[,gene] + 0.5)),
groups = list(unique(dat$subtype)))
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
stat_summary(fun.data = n_fun, geom = "text") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
return(plot)
}
plotGene(dat = pancreatic.data,
gene = "CDH1")
plotGene(dat = pancreatic.data,
gene = "CDH1")
min(dat[,gene])
plotGene <- function(dat,
gene) {
stat.test1 <- dat %>%
wilcox_test(as.formula(paste(gene, '~', "subtype"))) %>%
add_significance() %>%
add_x_position(x = "subtype")
stat.test1 <- stat.test1 %>%
mutate(y.position = round(max(dat[,gene] + 0.5)),
groups = list(unique(dat$subtype)))
n_fun <- function(x){
return(data.frame(y = round(min(dat[,gene])-0.5), label = round(median(x),2)))
}
plot <- ggplot(dat, aes(x = subtype, y = dat[,gene])) +
geom_violin(aes(fill = subtype)) +
geom_boxplot(width = 0.25, fill = "white") +
stat_summary(fun.data = n_fun, geom = "text") +
ylab(gene) +
theme_classic() +
stat_pvalue_manual(stat.test1, label = "p") +
theme(axis.title.x = element_blank())
return(plot)
}
plotGene(dat = pancreatic.data,
gene = "CDH1")
plotGene(dat = pancreatic.data,
gene = "CCR7")
plotGene(dat = pancreatic.data,
gene = "CCR6")
