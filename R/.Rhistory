devtools::install_github("vqv/ggbiplot")
library("ggbiplot", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
ggbiplot(y)
ggplot(cellTypes2, aes(x=PC1,y=PC2,color=orig.ident)) +
geom_point(aes(shape=Condition2), size=1.5) +
theme_classic() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
stat_ellipse() +
ylim(-1,1) +
xlim(-2.25,2.25) +
scale_color_manual(values = c("#A3A500", "#A3A500","#00C0AF", "#00C0AF")) +
scale_shape_manual(values =c(18, 16))
ggplot(cellTypes2, aes(x=PC1,y=PC2,color=orig.ident)) +
geom_point(aes(shape=Condition2), size=1.5) +
theme_classic() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
stat_ellipse() +
ylim(-1,1) +
xlim(-2,2) +
scale_color_manual(values = c("#A3A500", "#A3A500","#00C0AF", "#00C0AF")) +
scale_shape_manual(values =c(18, 16))
y <- prcomp(cellTypes2, scale. = T)
cellTypes2 <- cellTypes[,c(26:45, 76:92, 99:106)]
meta <- marrow@meta.data
cellTypes <- singler$singler[[1]]$SingleR.single$scores
cellTypes2 <- cellTypes[,c(26:45, 76:92, 99:106)]
library(ggfortify)
library(broom)
y <- prcomp(cellTypes2, scale. = T)
std <- as.data.frame(y$sdev^2/sum(y$sdev^2))
out <- NULL
for (i in 1:length(y$sdev)) {
z <- paste("PC", i, sep = "")
out <- c(z, out)
}
out <- rev(out)
std$PC <- out
colnames(std)[1] <- "Variance"
num=10
top_n(std, n=num, Variance) %>%
ggplot(., aes(reorder(x=PC, -Variance), y=Variance))+
geom_bar(stat='identity', color="black", lwd=0.25) +
labs(x = "Principal Components")  +
theme_classic()
PC <- y$x
cellTypes2 <- cbind.data.frame(cellTypes2, PC)
cellTypes2 <- merge(cellTypes2, meta, by = "row.names")
cellTypes2 <- cellTypes2 %>%
mutate(Condition2 = ifelse(orig.ident == "AAS" | orig.ident == "CS", "Skin", "LN"))
ggplot(cellTypes2, aes(x=PC1,y=PC2,color=orig.ident)) +
geom_point(aes(shape=Condition2), size=1.5) +
theme_classic() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
stat_ellipse() +
ylim(-1,1) +
xlim(-2,2) +
scale_color_manual(values = c("#A3A500", "#A3A500","#00C0AF", "#00C0AF")) +
scale_shape_manual(values =c(18, 16))
ggplot(cellTypes2, aes(x=PC1,y=PC2,color=orig.ident)) +
geom_point(aes(shape=Condition2), size=1.5) +
theme_classic() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
stat_ellipse() +
scale_color_manual(values = c("#A3A500", "#A3A500","#00C0AF", "#00C0AF")) +
scale_shape_manual(values =c(18, 16))
ggbiplot(y)
ggbiplot(y)
meta <- marrow@meta.data
cellTypes <- singler$singler[[1]]$SingleR.single$scores
cellTypes2 <- cellTypes[,c(26:45, 76:92, 99:106)]
library(ggfortify)
library(broom)
y <- prcomp(cellTypes2, center = TRUE,scale. = TRUE)
std <- as.data.frame(y$sdev^2/sum(y$sdev^2))
out <- NULL
for (i in 1:length(y$sdev)) {
z <- paste("PC", i, sep = "")
out <- c(z, out)
}
out <- rev(out)
std$PC <- out
colnames(std)[1] <- "Variance"
num=10
top_n(std, n=num, Variance) %>%
ggplot(., aes(reorder(x=PC, -Variance), y=Variance))+
geom_bar(stat='identity', color="black", lwd=0.25) +
labs(x = "Principal Components")  +
theme_classic()
PC <- y$x
cellTypes2 <- cbind.data.frame(cellTypes2, PC)
cellTypes2 <- merge(cellTypes2, meta, by = "row.names")
cellTypes2 <- cellTypes2 %>%
mutate(Condition2 = ifelse(orig.ident == "AAS" | orig.ident == "CS", "Skin", "LN"))
ggplot(cellTypes2, aes(x=PC1,y=PC2,color=orig.ident)) +
geom_point(aes(shape=Condition2), size=1.5) +
theme_classic() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
stat_ellipse() +
scale_color_manual(values = c("#A3A500", "#A3A500","#00C0AF", "#00C0AF")) +
scale_shape_manual(values =c(18, 16))
#ggsave("ALO_APC_PCA_2.eps", height = 4, width=5)
ggbiplot(y)
ggbiplot(y)
install.packages("factoextra")
fviz_pca_var(y,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
library("factoextra", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
fviz_pca_var(y,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
View(cellTypes)
corr(cellTypes2[2,20])
x <- psych::corr(cellTypes2[2,20])
x <- psych::corr.test(cellTypes2[2,20])
x <- psych::corr.test(cellTypes2[,2:20])
x
x <- psych::corr.test(cellTypes2[,2:40])
psych::cor.plot(x)
psych::corPlot(x)
psych::cor.plot(x)
psych::cor.plot(cellTypes2[,2:40]))
psych::cor.plot(cellTypes2[,2:40])
names(cellTypes[,c(26:45, 76:92, 99:106)])
colnames(cellTypes[,c(26:45, 76:92, 99:106)])
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC26)
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC26)
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC26)
tidied_pca %>%
filter(PC == "PC1") %>%
top_n(num, abs(Contribution)) %>%
mutate(Tag = reorder(Tag, Contribution)) %>%
ggplot(aes(Tag, Contribution, fill = PC)) +
geom_col(show.legend = FALSE, color="black") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
axis.ticks.x = element_blank()) +
labs( y = "Relative Importance",
x = "Metabolites") +
theme_classic() +
theme(axis.title.x = element_blank()) +
coord_flip()
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC26)
tidied_pca %>%
filter(PC == "PC1") %>%
top_n(num, abs(Contribution)) %>%
mutate(Tag = reorder(Tag, Contribution)) %>%
ggplot(aes(Tag, Contribution, fill = PC)) +
geom_col(show.legend = FALSE, color="black") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
axis.ticks.x = element_blank()) +
labs( y = "Relative Importance",
x = "Metabolites") +
theme_classic() +
theme(axis.title.x = element_blank()) +
coord_flip()
View(tidied_pca)
tidied_pca %>%
filter(PC == "PC1") %>%
top_n(num, abs(Contribution))
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC26)
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC10)
df <- cellTypes[,c(26:45, 76:92, 99:106)]
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC10)
tidied_pca %>%
filter(PC == "PC1") %>%
top_n(num, abs(Contribution)) %>%
mutate(Tag = reorder(Tag, Contribution)) %>%
ggplot(aes(Tag, Contribution, fill = PC)) +
geom_col(show.legend = FALSE, color="black") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
axis.ticks.x = element_blank()) +
labs( y = "Relative Importance",
x = "Metabolites") +
theme_classic() +
theme(axis.title.x = element_blank()) +
coord_flip()
ggsave("ALO_APC_PCA_test.pdf", height = 4, width=5)
meta <- marrow@meta.data
cellTypes <- singler$singler[[1]]$SingleR.single$scores
library(ggfortify)
library(broom)
y <- prcomp(cellTypes, center = TRUE,scale. = TRUE)
std <- as.data.frame(y$sdev^2/sum(y$sdev^2))
out <- NULL
for (i in 1:length(y$sdev)) {
z <- paste("PC", i, sep = "")
out <- c(z, out)
}
out <- rev(out)
std$PC <- out
colnames(std)[1] <- "Variance"
num=10
top_n(std, n=num, Variance) %>%
ggplot(., aes(reorder(x=PC, -Variance), y=Variance))+
geom_bar(stat='identity', color="black", lwd=0.25) +
labs(x = "Principal Components")  +
theme_classic()
PC <- y$x
cellTypes2 <- cbind.data.frame(cellTypes2, PC)
cellTypes2 <- merge(cellTypes2, meta, by = "row.names")
cellTypes2 <- cellTypes2 %>%
mutate(Condition2 = ifelse(orig.ident == "AAS" | orig.ident == "CS", "Skin", "LN"))
#cellTypes2 <- cellTypes[,c(26:45, 76:92, 99:106)]
cellTypes2 <- cellTypes
meta <- marrow@meta.data
cellTypes <- singler$singler[[1]]$SingleR.single$scores
#cellTypes2 <- cellTypes[,c(26:45, 76:92, 99:106)]
cellTypes2 <- cellTypes
library(ggfortify)
library(broom)
y <- prcomp(cellTypes2, center = TRUE,scale. = TRUE)
std <- as.data.frame(y$sdev^2/sum(y$sdev^2))
out <- NULL
for (i in 1:length(y$sdev)) {
z <- paste("PC", i, sep = "")
out <- c(z, out)
}
out <- rev(out)
std$PC <- out
colnames(std)[1] <- "Variance"
num=10
top_n(std, n=num, Variance) %>%
ggplot(., aes(reorder(x=PC, -Variance), y=Variance))+
geom_bar(stat='identity', color="black", lwd=0.25) +
labs(x = "Principal Components")  +
theme_classic()
PC <- y$x
cellTypes2 <- cbind.data.frame(cellTypes2, PC)
cellTypes2 <- merge(cellTypes2, meta, by = "row.names")
cellTypes2 <- cellTypes2 %>%
mutate(Condition2 = ifelse(orig.ident == "AAS" | orig.ident == "CS", "Skin", "LN"))
ggplot(cellTypes2, aes(x=PC1,y=PC2,color=orig.ident)) +
geom_point(aes(shape=Condition2), size=1.5) +
theme_classic() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
stat_ellipse() +
scale_color_manual(values = c("#A3A500", "#A3A500","#00C0AF", "#00C0AF")) +
scale_shape_manual(values =c(18, 16))
#ggsave("ALO_APC_PCA_test.pdf", height = 4, width=5)
df <- cellTypes
tidied_pca <- bind_cols(Tag = colnames(df),
tidy(y$rotation)) %>%
gather(PC, Contribution, PC1:PC10)
tidied_pca %>%
filter(PC == "PC1") %>%
top_n(num, abs(Contribution)) %>%
mutate(Tag = reorder(Tag, Contribution)) %>%
ggplot(aes(Tag, Contribution, fill = PC)) +
geom_col(show.legend = FALSE, color="black") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5),
axis.ticks.x = element_blank()) +
labs( y = "Relative Importance",
x = "Metabolites") +
theme_classic() +
theme(axis.title.x = element_blank()) +
coord_flip()
x <- cellTypes2 %>%
group_by(orig.ident) %>%
summarise(mean = mean())
meta <- marrow@meta.data
cellTypes <- singler$singler[[1]]$SingleR.single$scores
cellTypes2 <- cellTypes[,c(26:45, 76:92, 99:106)]
#cellTypes2 <- cellTypes
library(ggfortify)
library(broom)
y <- prcomp(cellTypes2, center = TRUE,scale. = TRUE)
std <- as.data.frame(y$sdev^2/sum(y$sdev^2))
out <- NULL
for (i in 1:length(y$sdev)) {
z <- paste("PC", i, sep = "")
out <- c(z, out)
}
out <- rev(out)
std$PC <- out
colnames(std)[1] <- "Variance"
num=10
top_n(std, n=num, Variance) %>%
ggplot(., aes(reorder(x=PC, -Variance), y=Variance))+
geom_bar(stat='identity', color="black", lwd=0.25) +
labs(x = "Principal Components")  +
theme_classic()
PC <- y$x
cellTypes2 <- cbind.data.frame(cellTypes2, PC)
cellTypes2 <- merge(cellTypes2, meta, by = "row.names")
cellTypes2 <- cellTypes2 %>%
mutate(Condition2 = ifelse(orig.ident == "AAS" | orig.ident == "CS", "Skin", "LN"))
colnames(cellTypes2)
x <- x[,c(2:46, "orig.ident")]
x <- cellTypes2 [,c(2:46, "orig.ident")]
x <- cellTypes2[,c(2:46, "orig.ident")]
x <- cellTypes2[,c(2:26, 92)]
x <- cellTypes2 %>%
group_by(orig.ident) %>%
summarise(mean = mean())
x <- cellTypes2 %>%
group_by(orig.ident) %>%
summarise(mean = mean(.))
View(x)
x <- cellTypes2 %>%
group_by(orig.ident) %>%
summarise(mean = mean(...))
x <- cellTypes2 %>%
group_by(orig.ident) %>%
summarise(mean = colMeans())
x <- cellTypes2 %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(.))
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(.))
x <- cellTyxpes2[,c(2:26, 92)]
x <- cellTypes2[,c(2:26, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(.))
View(x)
sapply(x, class)
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(x))
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(as.numeric(x)))
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(x))
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(.))
colnames(x)
x <- x %>%
group_by(orig.ident) %>%
colwise() %>%
summarise(mean = mean())
x <- x %>%
group_by(orig.ident) %>%
colwise() %>%
summarise(mean = mean(.))
x <- x %>%
group_by(orig.ident) %>%
colwise() %>%
summarise(mean = n())
class(x)
x <- x %>%
group_by(orig.ident)
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = mean())
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans())
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = sum())
View(x)
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = mean(x[,1:25]))
x <- cellTypes2[,c(2:26, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = mean(x[,1:25]))
View(x)
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(x[,1:25]))
x <- cellTypes2[,c(2:26, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(x[,1:25]))
View(x)
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(x))
x <- cellTypes2[,c(2:26, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = colMeans(x))
x <- x %>%
group_by(orig.ident) %>%
summarise(mean = mean(x))
x <- cellTypes2[,c(2:26, 92)]
x <- x %>%
group_by(orig.ident) %>%
colwise() %>%
summarise(mean = mean())
x <- x %>%
group_by(orig.ident) %>%
colwise() %>%
summarise_all(list(med = median))
x <- x %>%
group_by(orig.ident) %>%
summarise_all(list(med = median))
View(x)
pheatmap::pheatmap(t(as.matrix(x)))
pheatmap::pheatmap(t(as.matrix(x[,2:26])))
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = T)
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "row")
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column")
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column", annotation_col = t(x[,1]))
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column", annotation_col = t(as.matrix(x[,1])))
x[,1]
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column", annotation_col = t(x[,1]))
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column", annotation_col = t(x[,1]), show_colnames=T)
rownames(x) <- x[,1]
rownames(x) <- x$orig.ident
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column", annotation_col = t(x[,1]), show_colnames=T)
x
x <- as.data.frame(x)
rownames(x) <- x$orig.ident
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column", annotation_col = t(x[,1]), show_colnames=T)
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column", annotation_col = t(x[,1]))
View(x)
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column"
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column")
pdf("ALO_DC_celltypeHeatmap_test.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column")
dev.off()
colnames(cellTypes)
colnames(cellTypes2)
x <- cellTypes2[,c(2:46, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise_all(list(med = median))
x <- as.data.frame(x)
rownames(x) <- x$orig.ident
pdf("ALO_DC_celltypeHeatmap_test.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column")
dev.off()
x <- cellTypes2[,c(2:46, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise_all(list(med = median))
x <- as.data.frame(x)
rownames(x) <- x$orig.ident
pdf("ALO_DC_celltypeHeatmap_test.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:26])), scale = "column")
dev.off()
x <- cellTypes2[,c(2:46, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise_all(list(med = median))
x <- as.data.frame(x)
rownames(x) <- x$orig.ident
View(x)
x <- cellTypes2[,c(2:46, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise_all(list(med = median))
x <- as.data.frame(x)
rownames(x) <- x$orig.ident
pdf("ALO_DC_celltypeHeatmap_test.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:46])), scale = "column")
dev.off()
x <- cellTypes2[,c(2:46, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise_all(list(med = median))
x <- as.data.frame(x)
rownames(x) <- x$orig.ident
pdf("ALO_DC_celltypeHeatmap_test_scaled.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:46])), scale = "column")
dev.off()
pdf("ALO_DC_celltypeHeatmap_test.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:46])), scale = "column")
dev.off()
x <- cellTypes2[,c(2:46, 92)]
x <- x %>%
group_by(orig.ident) %>%
summarise_all(list(med = median))
x <- as.data.frame(x)
rownames(x) <- x$orig.ident
pdf("ALO_DC_celltypeHeatmap_test_scaled.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:46])), scale = "column")
dev.off()
pdf("ALO_DC_celltypeHeatmap_test.pdf")
pheatmap::pheatmap(t(as.matrix(x[,2:46])))
dev.off()
ggplot(cellTypes2, aes(x=PC1,y=PC2,color=orig.ident)) +
geom_point(aes(shape=Condition2), size=1.5) +
theme_classic() +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
stat_ellipse() +
scale_color_manual(values = c("#A3A500", "#A3A500","#00C0AF", "#00C0AF")) +
scale_shape_manual(values =c(18, 16))
ggsave("ALO_APC_PCA_test.pdf", height = 4, width=5)
