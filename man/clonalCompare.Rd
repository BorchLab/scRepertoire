% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clonalCompare.R
\name{clonalCompare}
\alias{clonalCompare}
\title{Demonstrate the difference in clonal proportion between clonotypes}
\usage{
clonalCompare(
  df,
  cloneCall = "strict",
  chain = "both",
  samples = NULL,
  clonotypes = NULL,
  top.clones = NULL,
  highlight.clones = NULL,
  relabel.clones = FALSE,
  split.by = NULL,
  graph = "alluvial",
  exportTable = FALSE,
  palette = "inferno"
)
}
\arguments{
\item{df}{The product of \code{\link{combineTCR}}, \code{\link{combineBCR}}, or
\code{\link{combineExpression}}.}

\item{cloneCall}{How to call the clonotype - VDJC gene (gene), 
CDR3 nucleotide (nt), CDR3 amino acid (aa), or 
VDJC gene + CDR3 nucleotide (strict).}

\item{chain}{indicate if both or a specific chain should be used - 
e.g. "both", "TRA", "TRG", "IGH", "IGL"}

\item{samples}{The specific samples to isolate for visualization.}

\item{clonotypes}{The specific clonal sequences of interest.}

\item{top.clones}{The top number of clonotype sequences per group}

\item{highlight.clones}{Clonal sequences to highlight, if present, 
all other clones returned will be grey.}

\item{relabel.clones}{Simplify the legend of the graph by returning
clones that are numerically indexed.}

\item{split.by}{If using a single-cell object, the column header 
to group the new list. NULL will return clusters.}

\item{graph}{The type of graph produced, either "alluvial" or "area".}

\item{exportTable}{Returns the data frame used for forming the graph.}

\item{palette}{Colors to use in visualization - input any hcl.pals()}
}
\value{
ggplot of the proportion of total sequencing read of 
selecting clonotypes
}
\description{
This function produces an alluvial or area graph of the proportion of 
the indicated clonotypes for all or selected samples. clonotypes can be 
selected using the clonotypes parameter with the specific sequence of 
interest or using the number parameter with the top n clonotypes by 
proportion to be visualized.
}
\examples{
#Making combined contig data
combined <- combineTCR(contig_list, 
                       samples = c("P17B", "P17L", "P18B", "P18L", 
                                   "P19B","P19L", "P20B", "P20L"))
clonalCompare(combined, 
              top.clones = 5, 
              samples = c("P17B", "P17L"), 
              cloneCall="aa")

}
