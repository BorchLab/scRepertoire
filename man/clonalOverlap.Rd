% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clonalOverlap.R
\name{clonalOverlap}
\alias{clonalOverlap}
\title{Examining the clonal overlap between groups or samples}
\usage{
clonalOverlap(
  df,
  cloneCall = "strict",
  method = NULL,
  chain = "both",
  group.by = NULL,
  exportTable = FALSE,
  palette = "inferno"
)
}
\arguments{
\item{df}{The product of \code{\link{combineTCR}}, \code{\link{combineBCR}}, or
\code{\link{combineExpression}}.}

\item{cloneCall}{How to call the clonotype - VDJC gene (gene), 
CDR3 nucleotide (nt), CDR3 amino acid (aa), or 
VDJC gene + CDR3 nucleotide (strict).}

\item{method}{The method to calculate the "overlap", 
for the base numbers.}

\item{chain}{indicate if both or a specific chain should be used - 
e.g. "both", "TRA", "TRG", "IGH", "IGL"}

\item{group.by}{The variable to use for grouping}

\item{exportTable}{Returns the data frame used for forming the graph}

\item{palette}{Colors to use in visualization - input any hcl.pals()}
}
\value{
ggplot of the clonotypic overlap between elements of a list
}
\description{
This functions allows for the calculation and visualizations of 
various overlap metrics for clonotypes.
}
\details{
The formulas for the indices are as follows:

\deqn{Overlap Coefficient: OC = \frac{\sum \min(a_i, b_i)}{\min(\sum a_i, \sum b_i)}}

\deqn{Raw Count Overlap: RCO = \sum \min(a_i, b_i)}

\deqn{Morisita Index: MI = \frac{\sum a_i b_i}{(\sum a_i)(\sum b_i)}}

\deqn{Jaccard Index: JI = \frac{\sum \min(a_i, b_i)}{\sum a_i + \sum b_i - \sum \min(a_i, b_i)}}

\deqn{Cosine Similarity: CS = \frac{\sum a_i b_i}{\sqrt{(\sum a_i^2)(\sum b_i^2)}}}

Where:
\itemize{
  \item{ \( a_i \) and \( b_i \) are the abundances of species \( i \) in groups A and B, respectively.}
}
}
\examples{
#Making combined contig data
combined <- combineTCR(contig_list, 
                        samples = c("P17B", "P17L", "P18B", "P18L", 
                                    "P19B","P19L", "P20B", "P20L"))

clonalOverlap(combined, 
              cloneCall = "gene", 
              method = "jaccard")

}
