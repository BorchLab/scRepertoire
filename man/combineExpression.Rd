% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/seuratFunctions.R
\name{combineExpression}
\alias{combineExpression}
\title{Adding clonotype information to a seurat or SCE object}
\usage{
combineExpression(
  df,
  sc,
  cloneCall = "gene+nt",
  chain = "both",
  groupBy = "none",
  proportion = TRUE,
  filterNA = FALSE,
  cloneTypes = c(Rare = 1e-04, Small = 0.001, Medium = 0.01, Large = 0.1, Hyperexpanded
    = 1)
)
}
\arguments{
\item{df}{The product of CombineTCR() or CombineBCR() or a list of 
both c(CombineTCR(), combineBCR())}

\item{sc}{The seurat or SingleCellExperiment (SCE) object to attach}

\item{cloneCall}{How to call the clonotype - VDJC gene (gene), 
CDR3 nucleotide (nt) CDR3 amino acid (aa), or 
VDJC gene + CDR3 nucleotide (gene+nt).}

\item{chain}{indicate if both or a specific chain should be used - 
e.g. "both", "TRA", "TRG", "Heavy", "Light"}

\item{groupBy}{The column label in the combined contig object in which 
clonotype frequency will be calculated.}

\item{proportion}{Whether to use the total frequency (FALSE) or the 
proportion (TRUE) of the clonotype based on the groupBy variable.}

\item{filterNA}{Method to subset seurat object of barcodes without 
clonotype information}

\item{cloneTypes}{The bins for the grouping based on frequency}
}
\value{
seurat or SingleCellExperiment object with attached clonotype 
information
}
\description{
This function adds the immune receptor information to the seurat or 
SCE object to the meta data. By defualt this function also calculates 
the frequencies of the clonotypes by sequencing run (groupBy = "none"). 
To change how the frequencies are calculated, select a column header for 
the groupBy variable. Importantly, before using combineExpression() 
ensure the barcodes of the seurat or SCE object match the barcodes in the 
output of the combinedContig() call. Check changeNames() to change the 
prefix of the seurat object. If combining more 
than one immune receptor type, barcodes with both receptors will be removed
during the combination process.
}
\examples{
#Getting the combined contigs
combined <- combineTCR(contig_list, rep(c("PX", "PY", "PZ"), each=2), 
rep(c("P", "T"), 3), cells ="T-AB")

#Getting a sample of a Seurat object
screp_example <- get(data("screp_example"))
sce <- suppressMessages(Seurat::UpdateSeuratObject(screp_example))
sce <- Seurat::as.SingleCellExperiment(sce)

#Using combineExpresion()
sce <- combineExpression(combined, sce)

}
